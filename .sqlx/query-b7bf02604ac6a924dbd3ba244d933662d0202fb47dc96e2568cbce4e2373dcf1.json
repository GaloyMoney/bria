{
  "db_name": "PostgreSQL",
  "query": "\n          WITH RECURSIVE unconfirmed_spends AS (\n              SELECT\n                  u1.keychain_id,\n                  u1.tx_id,\n                  u1.vout,\n                  COALESCE(unnested.ancestor_id, NULL) as ancestor_id,\n                  u1.origin_tx_vbytes,\n                  u1.origin_tx_fee,\n                  TRUE AS utxo_history_tip,\n                  u1.spending_batch_id\n              FROM bria_utxos u1\n              LEFT JOIN\n                  LATERAL UNNEST(u1.trusted_origin_tx_input_tx_ids) AS unnested(ancestor_id) ON true\n              WHERE\n                  u1.spending_batch_id IS NULL\n                  AND u1.created_at <= $1\n                  AND u1.keychain_id = ANY($2)\n                  AND u1.spending_payout_queue_id = $3\n              UNION ALL\n              SELECT\n                  u2.keychain_id,\n                  u2.tx_id,\n                  u2.vout,\n                  COALESCE(unnested.ancestor_id, NULL) as ancestor_id,\n                  u2.origin_tx_vbytes,\n                  u2.origin_tx_fee,\n                  FALSE AS utxo_history_tip,\n                  u2.spending_batch_id\n              FROM bria_utxos u2\n              LEFT JOIN\n                  LATERAL UNNEST(u2.trusted_origin_tx_input_tx_ids) AS unnested(ancestor_id) ON true\n              JOIN\n                  unconfirmed_spends ua ON ua.ancestor_id = u2.tx_id\n              WHERE \n                  u2.spend_settled_ledger_tx_id IS NULL\n                  AND u2.keychain_id = ANY($2)\n          )\n          SELECT DISTINCT\n            keychain_id AS \"keychain_id!\", tx_id AS \"tx_id!\", vout AS \"vout!\", ancestor_id,\n            origin_tx_vbytes as \"origin_tx_vbytes!\", origin_tx_fee as \"origin_tx_fee!\", utxo_history_tip as \"utxo_history_tip!\", spending_batch_id\n          FROM unconfirmed_spends\n          WHERE origin_tx_vbytes IS NOT NULL AND origin_tx_fee IS NOT NULL",
  "describe": {
    "columns": [
      {
        "ordinal": 0,
        "name": "keychain_id!",
        "type_info": "Uuid"
      },
      {
        "ordinal": 1,
        "name": "tx_id!",
        "type_info": "Varchar"
      },
      {
        "ordinal": 2,
        "name": "vout!",
        "type_info": "Int4"
      },
      {
        "ordinal": 3,
        "name": "ancestor_id",
        "type_info": "Varchar"
      },
      {
        "ordinal": 4,
        "name": "origin_tx_vbytes!",
        "type_info": "Int4"
      },
      {
        "ordinal": 5,
        "name": "origin_tx_fee!",
        "type_info": "Int4"
      },
      {
        "ordinal": 6,
        "name": "utxo_history_tip!",
        "type_info": "Bool"
      },
      {
        "ordinal": 7,
        "name": "spending_batch_id",
        "type_info": "Uuid"
      }
    ],
    "parameters": {
      "Left": [
        "Timestamptz",
        "UuidArray",
        "Uuid"
      ]
    },
    "nullable": [
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null
    ]
  },
  "hash": "b7bf02604ac6a924dbd3ba244d933662d0202fb47dc96e2568cbce4e2373dcf1"
}
